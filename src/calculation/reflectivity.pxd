# In Cython, a .pxd file must accompany a .pyx file if the .pyx file's contents are to be called in another .pyx file
# using 'cimport'.
# Note: This .pxd file must have the same name as the .so file generated by the compiler. The name of the .so file is
# specified in the 'setup.py' file.

cdef class reflectivity_namespace:
    # Note: The methods could be made static, e.g.:
    #
    # @staticmethod
    # cdef complex[:] amplitude_at_wavelengths(<function arguments>)
    #
    # However, this forces the methods to be declared as 'cdef' since Cython does not support static 'cpdef' methods,
    # yet. For debugging purposes, it is desirable to have the Python versions of the methods available (i.e. we want
    # the methods to be 'cpdef'). Hence, the methods have to be instance methods (i.e. they need 'self' as the first
    # function argument).

    cpdef complex[:] amplitude_at_wavelengths(self, int polarisation, int M, double[:] n,
          double[:] d, double[:] wavelengths, double n_outer, double n_substrate,
          double theta_outer)

    cpdef double[:] calculate_wavelengths(self, double min_wavelength, double max_wavelength, double total_thickness)

    cpdef complex amplitude(self, int polarisation, int M, double[:] n, double[:] d, double wavelength, double n_outer,
                     double n_substrate, double theta_outer)